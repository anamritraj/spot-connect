{"version":3,"sources":["components/content/content-header.js","components/song-panel/panel-header.js","utils/util.functions.js","components/song-panel/song-panel.js","components/content/content-body.js","utils/song.service.js","components/app/App.js","components/content/Content.js","components/app/index.js","index.js"],"names":["contentHeader","props","react_default","a","createElement","title","panelHeader","className","row","col","xs","span","offset","lg","style","width","src","image","alt","name","album","artists","map","item","index","key","href","url","target","rel","length","dt","datetime","Date","parseInt","toLocaleDateString","toLocaleTimeString","getTime","lastplayed","isPlaying","previous","elapsed","time","Math","round","toString","msPerMinute","msPerHour","msPerDay","timeDifference","Panel","collapse","customPanelStyle","borderRadius","marginBottom","overflow","border","boxShadow","songPanel","_ref","data","bordered","header","images","last_played","showArrow","contentBody","console","log","state","songs","element","_id","playing","socket","getRecentlyPlayedSongs","axios","get","Content","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","then","reduce","accum","curr","push","song","setState","catch","error","emit","on","updateSong","is_playing","newState","objectSpread","concat","toConsumableArray","Component","App","endpoint","socketIOClient","res","success","window","location","Content_Content","ReactDOM","render","app","document","getElementById"],"mappings":"oaAEe,SAASA,EAAcC,GACpC,OAAOC,EAAAC,EAAAC,cAAA,UAAKH,EAAMI,0DCAL,SAASC,EAAYL,GAQlC,OACEC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBACbL,EAAAC,EAAAC,cAAAI,EAAA,OACEN,EAAAC,EAAAC,cAAAK,EAAA,GAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,IACtDV,EAAAC,EAAAC,cAAA,OAAKU,MAAO,CAAEC,MAAO,QAAUC,IAAKf,EAAMgB,MAAOC,IAAI,cAEvDhB,EAAAC,EAAAC,cAAAK,EAAA,GAAKC,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKC,GAAI,CAAEF,KAAM,GAAIC,OAAQ,IACxDV,EAAAC,EAAAC,cAAA,KAAGG,UAAU,cAAcN,EAAMkB,MACjCjB,EAAAC,EAAAC,cAAA,KAAGG,UAAU,SAASN,EAAMmB,OAC5BlB,EAAAC,EAAAC,cAAA,KAAGG,UAAU,UACVN,EAAMoB,QAAQC,IAAI,SAACC,EAAMC,GACxB,OACEtB,EAAAC,EAAAC,cAAA,QAAMqB,IAAKD,GACTtB,EAAAC,EAAAC,cAAA,KAAGsB,KAAMH,EAAKI,IAAKC,OAAO,SAASC,IAAI,uBACpCN,EAAKJ,MAEPK,EAAQvB,EAAMoB,QAAQS,OAAS,EAAI,KAAO,SAKnD5B,EAAAC,EAAAC,cAAA,KAAGG,UAAU,OAAOF,MA5BZ,SAAA0B,GACd,IAAIC,EAAW,IAAIC,KAAKC,SAASH,IAGjC,OAFWC,EAASG,qBAEN,IADHH,EAASI,qBAyBaC,CAAQpC,EAAMqC,aACtCrC,EAAMsC,UACH,gBClChB,SAAwBC,GACtB,IAOIC,GAPU,IAAIR,MAAOI,UAODG,EAExB,GAAIC,EARc,IAQS,CACzB,IAAIC,EAAOC,KAAKC,MAAMH,EAAU,KAChC,OAAOC,EAAKG,YAAcH,EAAO,EAAI,eAAiB,eACjD,GAAID,EAVKK,KAUgB,CAC9B,IAAIJ,EAAOC,KAAKC,MAAMH,EAZN,KAahB,OAAOC,EAAKG,YAAcH,EAAO,EAAI,eAAiB,eACjD,GAAID,EAZIM,MAYgB,CAC7B,IAAIL,EAAOC,KAAKC,MAAMH,EAdRK,MAed,OAAOJ,EAAKG,YAAcH,EAAO,EAAI,aAAe,aAC/C,GAAID,EAdMO,OAcgB,CAC/B,IAAIN,EAAOC,KAAKC,MAAMH,EAhBTM,OAiBb,MACE,iBAAmBL,EAAKG,YAAcH,EAAO,EAAI,YAAc,YAE5D,GAAID,EAlBKO,QAkBgB,CAC9B,IAAIN,EAAOC,KAAKC,MAAMH,EApBPO,QAqBf,MACE,iBACAN,EAAKG,YACJH,EAAO,EAAI,cAAgB,cAG9B,IAAIA,EAAOC,KAAKC,MAAMH,EA1BRO,SA2Bd,MACE,iBACAN,EAAKG,YACJH,EAAO,EAAI,aAAe,aDDjBO,CAAef,SAASjC,EAAMqC,4BE/BxCY,EAAQC,EAAA,EAASD,MAOjBE,EAAmB,CACvBC,aAAc,EACdC,aAAc,GACdC,SAAU,SACVC,OAAQ,oBACRC,UAAW,oBAGE,SAASC,EAATC,GAAwC,IAAnBC,EAAmBD,EAAnBC,KAAMrB,EAAaoB,EAAbpB,UACxC,OACErC,EAAAC,EAAAC,cAAAK,EAAA,GAAKC,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKC,GAAI,CAAEF,KAAM,GAAIC,OAAQ,IACxDV,EAAAC,EAAAC,cAAA+C,EAAA,GAAUU,UAAU,GAClB3D,EAAAC,EAAAC,cAAC8C,EAAD,CACEY,OACE5D,EAAAC,EAAAC,cAACE,EAAD,CACEiC,UAAWA,EACXtB,MAAO2C,EAAKxC,MAAM2C,OAAO,GAAGpC,IAC5BR,KAAMyC,EAAKzC,KACXC,MAAOwC,EAAKxC,MAAMD,KAClBE,QAASuC,EAAKvC,QACdiB,WAAYsB,EAAKI,cAGrBC,WAAW,EACXnD,MAAOsC,MC/BF,SAASc,EAAYjE,GAElC,OADAkE,QAAQC,IAAInE,EAAMoE,OAEhBnE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAAI,EAAA,OACGP,EAAMoE,MAAMC,MAAMhD,IAAI,SAACiD,EAAS/C,GAC/B,OACEtB,EAAAC,EAAAC,cAACsD,EAAD,CACEE,KAAMW,EACN9C,IAAK8C,EAAQC,IACbjC,YAAqB,IAAVf,IAAevB,EAAMoE,MAAMI,eCZpD,ICMIC,EDNEC,EAAyB,WAC7B,OAAOC,IAAMC,IAAI,oDEIEC,sBACnB,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAMFI,kBAAoB,WAElBX,IACGY,KAAK,SAAA5B,GAAc,IACdW,EADcX,EAAXC,KACUA,KAAK4B,OAAO,SAACC,EAAOC,GAEnC,OADAD,EAAME,KAAKD,EAAKE,MACTH,GACN,IACHV,EAAKc,SAAS,CACZvB,MAAOA,EACPG,SAAS,MAGZqB,MAAM,SAASC,GAEd5B,QAAQC,IAAI,0CACZD,QAAQC,IAAI2B,KAGhBrB,EAAOsB,KAAK,OAAQ,mBAEpBtB,EAAOuB,GAAG,eAAgBlB,EAAKmB,aA5BnBnB,EA+BdmB,WAAa,SAAAtC,GACX,IAAwB,IAApBA,EAAKuC,WAAsB,CAC7B,IAAMC,EAAQpB,OAAAqB,EAAA,EAAArB,CAAA,GACTD,EAAKV,MADI,CAEZI,SAAS,IAEXM,EAAKc,SAASO,OACT,CACL,IACMA,EAAW,CACf9B,MAFO,CAAIV,GAAJ0C,OAAAtB,OAAAuB,EAAA,EAAAvB,CAAaD,EAAKV,MAAMC,QAG/BG,SAAS,GAEXM,EAAKc,SAASO,KA1ChBrB,EAAKV,MAAQ,CACXC,MAAO,GACPG,QAAS,MAJCM,wEAiDZ,OACE7E,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBACbL,EAAAC,EAAAC,cAACJ,EAAD,CAAeK,MAAM,iCACrBH,EAAAC,EAAAC,cAAC8D,EAAD,CAAaG,MAAOa,KAAKb,gBArDImC,cCLtBC,cFQb,SAAAA,IAAc,IAAA1B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuB,IACZ1B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyB,GAAApB,KAAAH,QACKb,MAAQ,CACXqC,SAAU,qCAEZhC,EAASiC,IAAe5B,EAAKV,MAAMqC,UALvB3B,mFASZH,IACGC,IADH,2EAIGU,KAAK,SAAAqB,GACCA,EAAIhD,KAAKiD,UACZC,OAAOC,SAASrF,KAAO,6EAK7B,OAAOxB,EAAAC,EAAAC,cAAC4G,EAAD,aArBOR,aGLlBS,IAASC,OAAOhH,EAAAC,EAAAC,cAAC+G,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3c43bb24.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./content-header.css\";\r\nexport default function contentHeader(props) {\r\n  return <h1>{props.title}</h1>;\r\n}\r\n","import React from \"react\";\r\nimport { Col, Row } from \"antd\";\r\nimport { timeDifference } from \"../../utils/util.functions\";\r\nexport default function panelHeader(props) {\r\n  const getTime = dt => {\r\n    let datetime = new Date(parseInt(dt));\r\n    let date = datetime.toLocaleDateString();\r\n    let time = datetime.toLocaleTimeString();\r\n    return date + \" \" + time;\r\n  };\r\n\r\n  return (\r\n    <div className=\"song-panel-header\">\r\n      <Row>\r\n        <Col xs={{ span: 8, offset: 0 }} lg={{ span: 4, offset: 0 }}>\r\n          <img style={{ width: \"85px\" }} src={props.image} alt=\"song art\" />\r\n        </Col>\r\n        <Col xs={{ span: 16, offset: 0 }} lg={{ span: 20, offset: 0 }}>\r\n          <p className=\"song-title\">{props.name}</p>\r\n          <p className=\"album\">{props.album}</p>\r\n          <p className=\"artist\">\r\n            {props.artists.map((item, index) => {\r\n              return (\r\n                <span key={index}>\r\n                  <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {item.name}\r\n                  </a>\r\n                  {index < props.artists.length - 1 ? \", \" : null}\r\n                </span>\r\n              );\r\n            })}\r\n          </p>\r\n          <p className=\"time\" title={getTime(props.lastplayed)}>\r\n            {props.isPlaying\r\n              ? \"Now Playing..\"\r\n              : timeDifference(parseInt(props.lastplayed))}\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","function timeDifference(previous) {\r\n  let current = new Date().getTime();\r\n  var msPerMinute = 60 * 1000;\r\n  var msPerHour = msPerMinute * 60;\r\n  var msPerDay = msPerHour * 24;\r\n  var msPerMonth = msPerDay * 30;\r\n  var msPerYear = msPerDay * 365;\r\n\r\n  var elapsed = current - previous;\r\n\r\n  if (elapsed < msPerMinute) {\r\n    let time = Math.round(elapsed / 1000);\r\n    return time.toString() + (time > 1 ? \" seconds ago\" : \" second ago\");\r\n  } else if (elapsed < msPerHour) {\r\n    let time = Math.round(elapsed / msPerMinute);\r\n    return time.toString() + (time > 1 ? \" minutes ago\" : \" minute ago\");\r\n  } else if (elapsed < msPerDay) {\r\n    let time = Math.round(elapsed / msPerHour);\r\n    return time.toString() + (time > 1 ? \" hours ago\" : \" hour ago\");\r\n  } else if (elapsed < msPerMonth) {\r\n    let time = Math.round(elapsed / msPerDay);\r\n    return (\r\n      \"approximately \" + time.toString() + (time > 1 ? \" days ago\" : \" day ago\")\r\n    );\r\n  } else if (elapsed < msPerYear) {\r\n    let time = Math.round(elapsed / msPerMonth);\r\n    return (\r\n      \"approximately \" +\r\n      time.toString() +\r\n      (time > 1 ? \" months ago\" : \" month ago\")\r\n    );\r\n  } else {\r\n    let time = Math.round(elapsed / msPerYear);\r\n    return (\r\n      \"approximately \" +\r\n      time.toString() +\r\n      (time > 1 ? \" years ago\" : \" year ago\")\r\n    );\r\n  }\r\n}\r\n\r\nexport { timeDifference };\r\n","import React from \"react\";\r\nimport { Collapse, Col } from \"antd\";\r\nimport PanelHeader from \"./panel-header\";\r\nimport \"./song-panel.css\";\r\nconst Panel = Collapse.Panel;\r\n// const text = `\r\n//   A dog is a type of domesticated animal.\r\n//   Known for its loyalty and faithfulness,\r\n//   it can be found as a welcome guest in many households across the world.\r\n// `;\r\n\r\nconst customPanelStyle = {\r\n  borderRadius: 4,\r\n  marginBottom: 24,\r\n  overflow: \"hidden\",\r\n  border: \"solid 1px #e8e8e8\",\r\n  boxShadow: \"0 0 30px #f3f1f1\"\r\n};\r\n\r\nexport default function songPanel({ data, isPlaying }) {\r\n  return (\r\n    <Col xs={{ span: 24, offset: 0 }} lg={{ span: 12, offset: 6 }}>\r\n      <Collapse bordered={false}>\r\n        <Panel\r\n          header={\r\n            <PanelHeader\r\n              isPlaying={isPlaying}\r\n              image={data.album.images[0].url}\r\n              name={data.name}\r\n              album={data.album.name}\r\n              artists={data.artists}\r\n              lastplayed={data.last_played}\r\n            />\r\n          }\r\n          showArrow={false}\r\n          style={customPanelStyle}\r\n        />\r\n      </Collapse>\r\n    </Col>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SongPanel from \"../song-panel/song-panel\";\r\nimport { Row } from \"antd\";\r\n\r\nexport default function contentBody(props) {\r\n  console.log(props.state);\r\n  return (\r\n    <div>\r\n      <Row>\r\n        {props.state.songs.map((element, index) => {\r\n          return (\r\n            <SongPanel\r\n              data={element}\r\n              key={element._id}\r\n              isPlaying={index === 0 && props.state.playing ? true : false}\r\n            />\r\n          );\r\n        })}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst getRecentlyPlayedSongs = () => {\r\n  return axios.get(\"https://spotapi.anandamritraj.in/spotify/recent\");\r\n};\r\n\r\nexport { getRecentlyPlayedSongs };\r\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport \"./App.css\";\nimport socketIOClient from \"socket.io-client\";\n\nimport Content from \"../content/Content\";\n\nvar socket;\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      endpoint: \"https://spotapi.anandamritraj.in/\"\n    };\n    socket = socketIOClient(this.state.endpoint);\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        `https://spotapi.anandamritraj.in/login?email=anandamritraj904@gmail.com`\n      )\n      .then(res => {\n        if (!res.data.success) {\n          window.location.href = \"https://spotapi.anandamritraj.in/login\";\n        }\n      });\n  }\n  render() {\n    return <Content />;\n  }\n}\nexport default App;\nexport { socket };\n","import React, { Component } from \"react\";\r\nimport ContentHeader from \"./content-header\";\r\nimport ContentBody from \"./content-body\";\r\nimport { socket } from \"../app/App\";\r\nimport { getRecentlyPlayedSongs } from \"../../utils/song.service\";\r\nimport \"./content.css\";\r\n\r\nexport default class Content extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      songs: [],\r\n      playing: null\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    // Lets first get the recently played data from the server\r\n    getRecentlyPlayedSongs()\r\n      .then(({ data }) => {\r\n        let songs = data.data.reduce((accum, curr) => {\r\n          accum.push(curr.song);\r\n          return accum;\r\n        }, []);\r\n        this.setState({\r\n          songs: songs,\r\n          playing: true\r\n        });\r\n      })\r\n      .catch(function(error) {\r\n        // Todo: Show a notification toast.\r\n        console.log(\"There was an error in getting the data\");\r\n        console.log(error);\r\n      });\r\n\r\n    socket.emit(\"join\", \"Anand's Spotify\");\r\n\r\n    socket.on(\"updated_song\", this.updateSong);\r\n  };\r\n\r\n  updateSong = data => {\r\n    if (data.is_playing === false) {\r\n      const newState = {\r\n        ...this.state,\r\n        playing: false\r\n      };\r\n      this.setState(newState);\r\n    } else {\r\n      let songs = [data, ...this.state.songs];\r\n      const newState = {\r\n        songs,\r\n        playing: true\r\n      };\r\n      this.setState(newState);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <ContentHeader title=\"Here's what I'm listening to\" />\r\n        <ContentBody state={this.state} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}